blueprint:
  name: Okno otvorené, klíma sa po určitom čase vypne
  description: 'Klimatizačné zariadenia ako vykurovacie a chladiace zariadenia (ak sú aktívne) 
  sa vypnú a po opätovnom zatvorení okien sa vrátia do predchádzajúcej nastavenej fázy. 
  Môžete tiež definovať čas, po ktorom sa klimatizačné zariadenie vráti do predchádzajúceho stavu.
  Teraz podporuje niekoľko režimov vykurovania a rôznych predajcov ako Tado. 
  Podporované režimy HAVC sú: automatický, auto, heat, heat_cool a off.'
  domain: automation
  input:
    window_entity:
      name: Okenný senzor
      description: Okenný senzor, ktorý riadi klimatickú entitu. 
        Ak máte viac okenných senzorov, vytvorte skupinový senzor.
      selector:
        entity:
          domain: binary_sensor
          device_class: window
          multiple: false
    minimum_open_time:
      name: Minimálna doba otvorenia
      description: Čas v sekundách na čakanie, kým sa spustí automatizácia
      default: 12
      selector:
        number:
          min: 0.0
          max: 120.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0
    minimum_close_time:
      name: Minimálny čas zatvárania
      description: Čas v sekundách na čakanie, kým sa klimatická entita opäť nezapne
      default: 12
      selector:
        number:
          min: 0.0
          max: 300.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0
    climate_target:
      name: Klimatická entita 
      description: Klimatická entita, ktorá je riadená snímačom okna.
      selector:
        entity:
          domain: climate
          multiple: false
    open_action:
      name: Dodatočná akcia otvoré (nepovinné)
      description: Akcia, ktorá sa má vykonať, ak je otvorený dverový/okenný senzor 
        (napr. otvorenie rolety, oznámenie TTS)
      default: []
      selector:
        action: {}
    close_action:
      name: Dodatočná akcia zatvorené (nepovinné)
      description: Akcia, ktorá sa má vykonať, ak sa senzor dverí/okna opäť zatvorí 
        (napr. zatvorenie rolety, oznámenie TTS)
      default: []
      selector:
        action: {}
  source_url: https://github.com/SmartLiving-Rocks/Blueprint/blob/main/window%20open%20climate%20off%20with%20minimum%20open%20and%20close%20time%20as%20well%20as%20additional%20actions
variables:
  open_action: !input open_action
  close_action: !input close_action
mode: single
trigger:
- platform: state
  entity_id: !input window_entity
  to: 'on'
  for: !input minimum_open_time
condition:
- condition: not
  conditions:
  - condition: state
    entity_id: !input climate_target
    state: 'off'
action:
- choose:
  - conditions:
    - condition: state
      entity_id: !input climate_target
      state: cool
    sequence:
    - service: climate.turn_off
      target:
        entity_id:
        - !input climate_target
    - choose:
      - conditions: '{{ open_action is defined and open_action|length > 0 }}'
        sequence: !input open_action
    - wait_for_trigger:
      - platform: state
        entity_id: !input window_entity
        to: 'off'
      continue_on_timeout: false
    - delay: !input minimum_close_time
    - choose:
      - conditions: '{{ close_action is defined and close_action|length > 0 }}'
        sequence: !input close_action
    - service: climate.set_hvac_mode
      target:
        entity_id:
        - !input climate_target
      data:
        hvac_mode: cool
  - conditions:
    - condition: state
      entity_id: !input climate_target
      state: heat_cool
    sequence:
    - service: climate.turn_off
      target:
        entity_id:
        - !input climate_target
    - choose:
      - conditions: '{{ open_action is defined and open_action|length > 0 }}'
        sequence: !input open_action
    - wait_for_trigger:
      - platform: state
        entity_id: !input window_entity
        to: 'off'
      continue_on_timeout: false
    - delay: !input minimum_close_time
    - choose:
      - conditions: '{{ close_action is defined and close_action|length > 0 }}'
        sequence: !input close_action
    - service: climate.set_hvac_mode
      target:
        entity_id:
        - !input climate_target
      data:
        hvac_mode: heat_cool
  - conditions:
    - condition: state
      entity_id: !input climate_target
      state: heat
    sequence:
    - service: climate.turn_off
      target:
        entity_id:
        - !input climate_target
    - choose:
      - conditions: '{{ open_action is defined and open_action|length > 0 }}'
        sequence: !input open_action
    - wait_for_trigger:
      - platform: state
        entity_id: !input window_entity
        to: 'off'
      continue_on_timeout: false
    - delay: !input minimum_close_time
    - choose:
      - conditions: '{{ close_action is defined and close_action|length > 0 }}'
        sequence: !input close_action
    - service: climate.set_hvac_mode
      data:
        hvac_mode: heat
      target:
        entity_id:
        - !input climate_target
  - conditions:
    - condition: state
      entity_id: !input climate_target
      state: automatic
    sequence:
    - service: climate.turn_off
      target:
        entity_id:
        - !input climate_target
    - choose:
      - conditions: '{{ open_action is defined and open_action|length > 0 }}'
        sequence: !input open_action
    - wait_for_trigger:
      - platform: state
        entity_id: !input window_entity
        to: 'off'
      continue_on_timeout: false
    - delay: !input minimum_close_time
    - choose:
      - conditions: '{{ close_action is defined and close_action|length > 0 }}'
        sequence: !input close_action
    - service: climate.set_hvac_mode
      data:
        hvac_mode: automatic
      target:
        entity_id:
        - !input climate_target
  - conditions:
    - condition: state
      entity_id: !input climate_target
      state: auto
    sequence:
    - service: climate.turn_off
      target:
        entity_id:
        - !input climate_target
    - choose:
      - conditions: '{{ open_action is defined and open_action|length > 0 }}'
        sequence: !input open_action
    - wait_for_trigger:
      - platform: state
        entity_id: !input window_entity
        to: 'off'
      continue_on_timeout: false
    - delay: !input minimum_close_time
    - choose:
      - conditions: '{{ close_action is defined and close_action|length > 0 }}'
        sequence: !input close_action
    - service: climate.set_hvac_mode
      data:
        hvac_mode: auto
      target:
        entity_id:
        - !input climate_target
  - conditions:
    - condition: state
      entity_id: !input climate_target
      state: dry
    sequence:
    - service: climate.turn_off
      target:
        entity_id:
        - !input climate_target
    - choose:
      - conditions: '{{ open_action is defined and open_action|length > 0 }}'
        sequence: !input open_action
    - wait_for_trigger:
      - platform: state
        entity_id: !input window_entity
        to: 'off'
      continue_on_timeout: false
    - delay: !input minimum_close_time
    - choose:
      - conditions: '{{ close_action is defined and close_action|length > 0 }}'
        sequence: !input close_action
    - service: climate.set_hvac_mode
      data:
        hvac_mode: dry
      target:
        entity_id:
        - !input climate_target
  - conditions:
    - condition: state
      entity_id: !input climate_target
      state: fan_only
    sequence:
    - service: climate.turn_off
      target:
        entity_id:
        - !input climate_target
    - choose:
      - conditions: '{{ open_action is defined and open_action|length > 0 }}'
        sequence: !input open_action
    - wait_for_trigger:
      - platform: state
        entity_id: !input window_entity
        to: 'off'
      continue_on_timeout: false
    - delay: !input minimum_close_time
    - choose:
      - conditions: '{{ close_action is defined and close_action|length > 0 }}'
        sequence: !input close_action
    - service: climate.set_hvac_mode
      data:
        hvac_mode: fan_only
      target:
        entity_id:
        - !input climate_target

